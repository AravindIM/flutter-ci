stages:
- test
- version
- build
- package
- release


flutter-analyze:
  stage: test
  environment: test
  image: ghcr.io/cirruslabs/flutter:stable
  rules:
    - if: $CI_COMMIT_TAG
      when: never
  before_script:
    - flutter pub get
  script:
    - flutter analyze


flutter-test:
  stage: test
  environment: test
  image: ghcr.io/cirruslabs/flutter:stable
  rules:
    - if: $CI_COMMIT_TAG
      when: never
  before_script:
    - flutter pub get
  script:
    - flutter test

bump-version:
  stage: version
  image: alpine:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    INITIAL_VERSION: '0.0.1'
  script:
    - |
      if [ -z "$(git tag)" ]; then
        RELEASE_VERSION="0.0.1"
      else
        latest_tag=$(git describe --tags --abbrev=0 | sed 's/^v//')
        major=$(echo "$latest_tag" | awk -F '.' '{print $1}')
        minor=$(echo "$latest_tag" | awk -F '.' '{print $2}')
        patch=$(echo "$latest_tag" | awk -F '.' '{print $3}')
        patch=$((patch + 1))
        RELEASE_VERSION="${major}.${minor}.${patch}"
      fi
      echo "RELEASE_VERSION=${RELEASE_VERSION}" >> release.env
  artifacts:
    untracked: false
    when: on_success
    expire_in: "30 days"
    reports:
      dotenv: release.env

build-apk:
  stage: build
  image: ghcr.io/cirruslabs/flutter:stable
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  before_script:
    - flutter pub get
  script:
    - flutter build apk --split-per-abi --release
  artifacts:
    untracked: false
    when: on_success
    paths:
      - ./build/app/outputs/flutter-apk/*.apk
    expire_in: "30 days"


publish-package:
  stage: package
  image: curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
  dependencies:
    - build-apk
    - bump-version
  script:
    - apk_paths=$(ls ./build/app/outputs/flutter-apk/*.apk)
    - |
      for apk_path in $apk_paths
      do
        apk_filename=$(basename $apk_path)
        curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file $apk_path "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${RELEASE_VERSION}/${apk_filename}"
      done

release-apk:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
  dependencies:
    - build-apk
    - bump-version
  script:
    - echo "Creating release for ${CI_PROJECT_TITLE} v${RELEASE_VERSION}"
    - |
      args=""
      for apk_path in ./build/app/outputs/flutter-apk/*.apk
      do
        apk_filename=$(basename "$apk_path")
        args="${args}"' --assets-link '"'{\"name\":\"${apk_filename}\",\"url\":\"${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}/${RELEASE_VERSION}/${apk_filename}\"}'"
      done
      echo "${args}" | xargs release-cli create --name "${CI_PROJECT_TITLE} v${RELEASE_VERSION}" --tag-name "v${RELEASE_VERSION}"



